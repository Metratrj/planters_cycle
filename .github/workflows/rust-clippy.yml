# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# rust-clippy is a tool that runs a bunch of lints to catch common
# mistakes in your Rust code and help improve your Rust code.
# More details at https://github.com/rust-lang/rust-clippy
# and https://rust-lang.github.io/rust-clippy/

name: rust-clippy analyze

on:
  push:
    branches: [ "dev" ]
    paths:
      - "api/**"
      - ".github/workflows/rust-clippy.yml"
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "dev" ]
    paths:
      - "api/**"
      - ".github/workflows/rust-clippy.yml"
  schedule:
    - cron: '40 15 * * 6'

jobs:
  rust-clippy-analyze:
    name: Run rust-clippy analyzing
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./api
    permissions:
      contents: read
      security-events: write
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af #@v1
        with:
          profile: minimal
          toolchain: stable
          components: clippy
          override: true

      # Enable Rust Caching
      - uses: Swatinem/rust-cache@v2.7.3
        with:
          # Use a custom prefix-key to force a fresh start. This is sometimes needed with bigger changes.
          # Like changing the build host from Ubuntu 20.04 to 22.04 for example.
          # Only update when really needed! Use a <year>.<month>[.<inc>] format.
          prefix-key: "v2024.05-rust-clippy"
          workspaces: ./api

      - name: Install required cargo
        run: cargo install clippy-sarif sarif-fmt

      - name: Generate primsa scheme
        run: cargo prisma generate

      - name: Run rust-clippy
        run:
          cargo clippy
          --all-features
          --message-format=json | clippy-sarif | tee rust-clippy-results.sarif | sarif-fmt
        continue-on-error: true

      - name: Install jq
        run: sudo apt-get install jq -y

      - name: Prepend api path to the sarif
        run: |
          bash  ./../scripts/prepend-api-path-to-sarif.sh rust-clippy-results.sarif tmp.json;
          mv tmp.json rust-clippy-results.sarif

      - name: Upload analysis results to GitHub
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: api/rust-clippy-results.sarif
          wait-for-processing: true
