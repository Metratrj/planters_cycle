// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id           String         @id @default(uuid())
  displayName  String
  email        String         @unique
  password     String
  lastLogin    DateTime?
  createdAt    DateTime       @default(now())
  roles        UsersInRoles[]
  PlantHistory PlantHistory[]
}

model Role {
  id    Int            @id @default(autoincrement())
  name  String
  users UsersInRoles[]
}

model UsersInRoles {
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  role       Role     @relation(fields: [roleId], references: [id])
  roleId     Int
  assignedAt DateTime @default(now())
  assignedBy String

  @@id([userId, roleId])
}

model Plant {
  id           String         @id @default(uuid())
  name         String
  genetic      Genetic        @relation(fields: [geneticId], references: [id])
  geneticId    String
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  PlantHistory PlantHistory[]
}

model Genetic {
  id    String  @id @default(uuid())
  name  String
  Plant Plant[]
}

model PlantHistory {
  id        String   @id @default(uuid())
  plant     Plant    @relation(fields: [plantId], references: [id])
  plantId   String
  action    String
  createdAt DateTime @default(now())
  User      User     @relation(fields: [userId], references: [id])
  userId    String
}
